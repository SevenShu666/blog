(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{454:function(s,t,e){"use strict";e.r(t);var a=e(10),r=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_6-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-docker"}},[s._v("#")]),s._v(" 6.docker")]),s._v(" "),t("h2",{attrs:{id:"一、docker命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、docker命令"}},[s._v("#")]),s._v(" 一、docker命令")]),s._v(" "),t("h3",{attrs:{id:"_1-docker运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker运行"}},[s._v("#")]),s._v(" 1.Docker运行")]),s._v(" "),t("p",[s._v("要在Docker中运行容器，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker run [OPTIONS] IMAGE [COMMAND] [ARG...]")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker run")]),s._v("：运行容器的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置容器的各种选项，如端口映射、容器名称等。")]),s._v(" "),t("li",[t("code",[s._v("IMAGE")]),s._v("：要运行的镜像名称或ID。")]),s._v(" "),t("li",[t("code",[s._v("[COMMAND] [ARG...]")]),s._v("：可选的命令和参数，用于在容器内执行特定的命令。")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker run --name nginx-test2 -p 80:80 -v /tmp/aaa:/usr/share/nginx/html -e KEY1=VALUE1 -d nginx:latest\n")])])]),t("ul",[t("li",[t("p",[s._v("-p 是端口映射")])]),s._v(" "),t("li",[t("p",[s._v("-v 是指定数据卷挂载目录")])]),s._v(" "),t("li",[t("p",[s._v("-e 是指定环境变量")])]),s._v(" "),t("li",[t("p",[s._v("-d 是后台运行")])])]),s._v(" "),t("h3",{attrs:{id:"_2-docker构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker构建"}},[s._v("#")]),s._v(" 2.Docker构建")]),s._v(" "),t("p",[s._v("要构建自己的Docker镜像，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker build [OPTIONS] PATH | URL | -")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker build")]),s._v("：构建镜像的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置构建过程，如镜像标签、构建上下文路径等。")]),s._v(" "),t("li",[t("code",[s._v("PATH | URL | -")]),s._v("：Dockerfile所在的路径、URL或者使用标准输入作为Dockerfile。")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker build -t aaa:ddd -f 2.Dockerfile .\n")])])]),t("ul",[t("li",[t("p",[s._v("aaa 是镜像名")])]),s._v(" "),t("li",[t("p",[s._v("ddd 是镜像的标签")])]),s._v(" "),t("li",[t("p",[s._v("-f 指定dockefile 的文件名")])])]),s._v(" "),t("h3",{attrs:{id:"_3-docker-pull"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-pull"}},[s._v("#")]),s._v(" 3.Docker pull")]),s._v(" "),t("p",[s._v("要从Docker仓库中拉取现有的镜像，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker pull [OPTIONS] NAME[:TAG|@DIGEST]")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker pull")]),s._v("：拉取镜像的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置拉取过程，如认证信息等。")]),s._v(" "),t("li",[t("code",[s._v("NAME[:TAG|@DIGEST]")]),s._v("：要拉取的镜像名称、标签或摘要。")])]),s._v(" "),t("h3",{attrs:{id:"_4-docker-push"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-docker-push"}},[s._v("#")]),s._v(" 4.Docker push")]),s._v(" "),t("p",[s._v("要将本地的镜像推送到Docker仓库，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker push [OPTIONS] NAME[:TAG]")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker push")]),s._v("：推送镜像的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置推送过程，如认证信息等。")]),s._v(" "),t("li",[t("code",[s._v("NAME[:TAG]")]),s._v("：要推送的镜像名称和标签。")])]),s._v(" "),t("h3",{attrs:{id:"_5-docker-images"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-docker-images"}},[s._v("#")]),s._v(" 5.Docker images")]),s._v(" "),t("p",[s._v("要列出本地所有的镜像，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker images [OPTIONS] [REPOSITORY[:TAG]]")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker images")]),s._v("：列出镜像的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置输出结果的格式等。")]),s._v(" "),t("li",[t("code",[s._v("[REPOSITORY[:TAG]]")]),s._v("：可选的镜像名称和标签，用于过滤输出结果。")])]),s._v(" "),t("h3",{attrs:{id:"_6-docker-ps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-docker-ps"}},[s._v("#")]),s._v(" 6.Docker ps")]),s._v(" "),t("p",[s._v("要列出正在运行的容器，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker ps [OPTIONS]")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker ps")]),s._v("：列出容器的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置输出结果的格式和过滤条件。")])]),s._v(" "),t("p",[t("code",[s._v("docker ps -a")])]),s._v(" "),t("ul",[t("li",[s._v("-a查看所有容器")])]),s._v(" "),t("h3",{attrs:{id:"_7-docker-stop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-docker-stop"}},[s._v("#")]),s._v(" 7.Docker stop")]),s._v(" "),t("p",[s._v("要停止正在运行的容器，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker stop [OPTIONS] CONTAINER [CONTAINER...]")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker stop")]),s._v("：停止容器的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置停止过程，如超时时间等。")]),s._v(" "),t("li",[t("code",[s._v("CONTAINER [CONTAINER...]")]),s._v("：要停止的容器名称或ID。")])]),s._v(" "),t("h3",{attrs:{id:"_8-docker-start"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-docker-start"}},[s._v("#")]),s._v(" 8.Docker start")]),s._v(" "),t("p",[s._v("要启动已停止的容器，可以使用以下命令：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker start")]),s._v("：启动容器的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置启动过程，如守护模式等。")]),s._v(" "),t("li",[t("code",[s._v("CONTAINER [CONTAINER...]")]),s._v("：要启动的容器名称或ID。")])]),s._v(" "),t("h3",{attrs:{id:"_9-docker-restart"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-docker-restart"}},[s._v("#")]),s._v(" 9.Docker restart")]),s._v(" "),t("p",[s._v("要重启正在运行的容器，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker restart [OPTIONS] CONTAINER [CONTAINER...]")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker restart")]),s._v("：重启容器的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置重启过程，如超时时间等。")]),s._v(" "),t("li",[t("code",[s._v("CONTAINER [CONTAINER...]")]),s._v("：要重启的容器名称或ID。")])]),s._v(" "),t("h3",{attrs:{id:"_10-docker-kill"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-docker-kill"}},[s._v("#")]),s._v(" 10.Docker kill")]),s._v(" "),t("p",[s._v("要强制终止正在运行的容器，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker kill [OPTIONS] CONTAINER [CONTAINER...]")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker kill")]),s._v("：终止容器的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置终止过程，如信号等。")]),s._v(" "),t("li",[t("code",[s._v("CONTAINER [CONTAINER...]")]),s._v("：要终止的容器名称或ID。")])]),s._v(" "),t("h3",{attrs:{id:"_11-docker-rm-docker-rmi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-docker-rm-docker-rmi"}},[s._v("#")]),s._v(" 11.Docker rm/docker rmi")]),s._v(" "),t("p",[s._v("要删除已停止的容器或镜像，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker rm [OPTIONS] CONTAINER [CONTAINER...]")])]),s._v(" "),t("p",[t("code",[s._v("docker rmi [OPTIONS] IMAGE [IMAGE...]")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("docker rm：删除容器的命令。")])]),s._v(" "),t("li",[t("p",[s._v("docker rmi：删除镜像的命令。")])]),s._v(" "),t("li",[t("p",[s._v("[OPTIONS]：可选参数，用于配置删除过程，如强制删除等。")])]),s._v(" "),t("li",[t("p",[s._v("CONTAINER [CONTAINER...]：要删除的容器名称或ID。")])]),s._v(" "),t("li",[t("p",[s._v("IMAGE [IMAGE...]：要删除的镜像名称或ID。")])])]),s._v(" "),t("h3",{attrs:{id:"_12-docker-exec"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-docker-exec"}},[s._v("#")]),s._v(" 12.Docker exec")]),s._v(" "),t("p",[s._v("要在运行中的容器内执行命令，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker exec [OPTIONS] CONTAINER COMMAND [ARG...]")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker exec")]),s._v("：在容器内执行命令的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置执行过程，如进入交互模式等。")]),s._v(" "),t("li",[t("code",[s._v("CONTAINER")]),s._v("：要执行命令的容器名称或ID。")]),s._v(" "),t("li",[t("code",[s._v("COMMAND [ARG...]")]),s._v("：要在容器内执行的命令及其参数。")])]),s._v(" "),t("p",[t("code",[s._v("docker exec -it a286d879c031 sh")])]),s._v(" "),t("p",[t("code",[s._v("docker exec -it 容器名 /bin/bash")])]),s._v(" "),t("ul",[t("li",[s._v("ls：查看容器内的文件")]),s._v(" "),t("li",[s._v("exit：退出容器")])]),s._v(" "),t("h3",{attrs:{id:"_13-docker-logs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-docker-logs"}},[s._v("#")]),s._v(" 13.Docker logs")]),s._v(" "),t("p",[s._v("要查看容器的日志输出，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker logs [OPTIONS] CONTAINER")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker logs")]),s._v("：查看容器日志的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置输出结果，如时间戳等。")]),s._v(" "),t("li",[t("code",[s._v("CONTAINER")]),s._v("：要查看日志的容器名称或ID。")])]),s._v(" "),t("h3",{attrs:{id:"_14-docker-inspect"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-docker-inspect"}},[s._v("#")]),s._v(" 14.Docker inspect")]),s._v(" "),t("p",[s._v("要获取容器或镜像的详细信息，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker inspect [OPTIONS] NAME|ID [NAME|ID...]")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker inspect")]),s._v("：获取详细信息的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置输出结果的格式等。")]),s._v(" "),t("li",[t("code",[s._v("NAME|ID [NAME|ID...]")]),s._v("：要获取信息的容器或镜像的名称或ID。")])]),s._v(" "),t("h3",{attrs:{id:"_15-docker-cp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-docker-cp"}},[s._v("#")]),s._v(" 15.Docker cp")]),s._v(" "),t("p",[s._v("要在容器和主机之间复制文件或目录，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH docker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("docker cp：复制文件或目录的命令。")])]),s._v(" "),t("li",[t("p",[s._v("[OPTIONS]：可选参数，用于配置复制过程，如权限等。")])]),s._v(" "),t("li",[t("p",[s._v("CONTAINER:SRC_PATH：源路径，其中CONTAINER是容器名称或ID。")])]),s._v(" "),t("li",[t("p",[s._v("DEST_PATH：目标路径，其中DEST_PATH是主机路径。")])]),s._v(" "),t("li",[t("p",[s._v("SRC_PATH|-：源路径，其中-表示从标准输入读取。")])])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker cp  ~/nginx-html nginx1:/usr/share/nginx/html-xxx\n")])])]),t("h3",{attrs:{id:"_16-docker-system-prune"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-docker-system-prune"}},[s._v("#")]),s._v(" 16.Docker system prune")]),s._v(" "),t("p",[s._v("要清理不再使用的镜像、容器和其他资源，可以使用以下命令：")]),s._v(" "),t("p",[t("code",[s._v("docker system prune [OPTIONS]")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker system prune")]),s._v("：清理资源的命令。")]),s._v(" "),t("li",[t("code",[s._v("[OPTIONS]")]),s._v("：可选参数，用于配置清理过程，如强制删除等。")])]),s._v(" "),t("h3",{attrs:{id:"_17-docker-network"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-docker-network"}},[s._v("#")]),s._v(" 17.Docker network")]),s._v(" "),t("p",[s._v("Docker网络允许容器之间进行通信和连接到外部网络。以下是一些与Docker网络相关的常用命令：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("docker network ls：列出所有的Docker网络。")])]),s._v(" "),t("li",[t("p",[s._v("docker network create：创建一个新的Docker网络。")])]),s._v(" "),t("li",[t("p",[s._v("docker network connect：将容器连接到指定的Docker网络。")])]),s._v(" "),t("li",[t("p",[s._v("docker network disconnect：将容器从指定的Docker网络断开连接。")])])]),s._v(" "),t("h3",{attrs:{id:"_18-docker-volume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18-docker-volume"}},[s._v("#")]),s._v(" 18.Docker volume")]),s._v(" "),t("p",[s._v("Docker卷用于在容器和主机之间持久化存储数据。以下是一些与Docker卷相关的常用命令：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("docker volume ls：列出所有的Docker卷。")])]),s._v(" "),t("li",[t("p",[s._v("docker volume create：创建一个新的Docker卷。")])]),s._v(" "),t("li",[t("p",[s._v("docker volume inspect：获取Docker卷的详细信息。")])]),s._v(" "),t("li",[t("p",[s._v("docker volume rm：删除指定的Docker卷。")])])]),s._v(" "),t("h3",{attrs:{id:"_19-docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19-docker-compose"}},[s._v("#")]),s._v(" 19.Docker-compose")]),s._v(" "),t("p",[s._v("Docker-compose是一个用于定义和运行多个容器应用程序的工具。它使用YAML文件来配置应用程序的服务、网络和卷等。以下是一些与Docker-compose相关的常用命令：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("docker-compose up：构建并启动Docker-compose定义的所有服务。")])]),s._v(" "),t("li",[t("p",[s._v("docker-compose down：停止并删除Docker-compose定义的所有服务。")])]),s._v(" "),t("li",[t("p",[s._v("docker-compose build：构建Docker-compose定义的所有服务的镜像。")])]),s._v(" "),t("li",[t("p",[s._v("docker-compose logs：查看Docker-compose定义的所有服务的日志。")])])]),s._v(" "),t("p",[s._v("docker-compose.yml")]),s._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.8'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("fe-admin-app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" fe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("admin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("admin\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token datetime number"}},[s._v("80:80")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("depends_on")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" nest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("app\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# restart: always")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" common"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("network\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nest-app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("context")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ./\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dockerfile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ./Dockerfile\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("depends_on")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("container\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("container\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" NODE_ENV=production\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# restart: always")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" common"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("network\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mysql-container")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" E"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/docker"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("volumes/meeting/mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/mysql\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysqld "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("character"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("set"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("server=utf8mb4 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("collation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("server=utf8mb4_general_ci "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置默认字符集")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3306:3306"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MYSQL_DATABASE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" xxxxx\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MYSQL_ROOT_PASSWORD")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" xxx\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# restart: always")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" common"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("network\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis-container")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" E"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/docker"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("volumes/meeting/redis"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/data\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# restart: always")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" common"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("network\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("minio-container")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" bitnami/minio"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("latest\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 9000"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 9001"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9001")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" E"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/docker"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("volumes/meeting/minio"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/bitnami/minio/data\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MINIO_ROOT_USER")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" xxx\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("MINIO_ROOT_PASSWORD")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" xxxx\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# restart: always")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" common"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("network\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("common-network")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("driver")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" bridge\n")])])]),t("ul",[t("li",[t("p",[s._v("image：用到的镜像")])]),s._v(" "),t("li",[t("p",[s._v("build:")]),s._v(" "),t("ul",[t("li",[s._v("context：构建上下文")]),s._v(" "),t("li",[s._v("dockerfile：dockerfile文件路径")])])]),s._v(" "),t("li",[t("p",[s._v("ports：端口，外部端口:内部端口")])]),s._v(" "),t("li",[t("p",[s._v("environment：设置环境变量（用户名、密码等）")])]),s._v(" "),t("li",[t("p",[s._v("volumes：数据卷")])]),s._v(" "),t("li",[t("p",[s._v("depends_on：依赖于哪些项目，先启动完成这些项目")])]),s._v(" "),t("li",[t("p",[s._v("restart：容器重启策略")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("on-failure")]),s._v(" 是指在容器退出时，当其退出状态码不为0（即失败）时，自动重启该容器。具体来说，它会重启那些在容器退出时返回非0状态码的容器。如果容器在退出时返回状态码0，则不会自动重启该容器。")]),s._v(" "),t("li",[s._v("no：容器退出时不重启容器；")]),s._v(" "),t("li",[s._v("always：容器退出时总是重启容器；")]),s._v(" "),t("li",[s._v("unless-stopped：容器退出时重启容器，除非容器被手动停止。")])])]),s._v(" "),t("li",[t("p",[s._v("networks：桥接网络，每个容器都有独立的 Network Namespace，创建一个 Network Namespace，然后设置到多个 Docker 容器，这样这些容器就在一个 Namespace 下了，就可以直接访问对应端口了")])])]),s._v(" "),t("h3",{attrs:{id:"_20-docker-swarm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-docker-swarm"}},[s._v("#")]),s._v(" 20.Docker swarm")]),s._v(" "),t("p",[s._v("Docker swarm是Docker的原生集群管理和编排工具，用于在多个Docker主机上运行和管理应用程序。以下是一些与Docker swarm相关的常用命令：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("docker swarm init：初始化一个新的Docker swarm集群。")])]),s._v(" "),t("li",[t("p",[s._v("docker swarm join：将节点加入到Docker swarm集群。")])]),s._v(" "),t("li",[t("p",[s._v("docker node ls：列出Docker swarm集群中的所有节点。")])]),s._v(" "),t("li",[t("p",[s._v("docker service：管理在Docker swarm集群中运行的服务。")])])]),s._v(" "),t("h3",{attrs:{id:"_21-dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21-dockerfile"}},[s._v("#")]),s._v(" 21.Dockerfile")]),s._v(" "),t("p",[s._v("Dockerfile是用于定义Docker镜像构建过程的文本文件。它包含一系列的指令和配置，用于指导Docker引擎在构建过程中执行特定的操作。以下是一些与Dockerfile相关的常用命令：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("FROM：指定基础镜像。")])]),s._v(" "),t("li",[t("p",[s._v("RUN：在容器内执行命令。")])]),s._v(" "),t("li",[t("p",[s._v("COPY：将文件或目录从主机复制到容器内。")])]),s._v(" "),t("li",[t("p",[s._v("ADD：将文件或目录从主机复制到容器内，并支持URL和解压缩操作。")])]),s._v(" "),t("li",[t("p",[s._v("WORKDIR：设置工作目录。")])]),s._v(" "),t("li",[t("p",[s._v("EXPOSE：声明容器运行时监听的端口。")])]),s._v(" "),t("li",[t("p",[s._v("CMD：指定容器启动时要执行的命令。")])])]),s._v(" "),t("p",[s._v("Dockerfile")]),s._v(" "),t("p",[s._v("分阶段减少多余文件")]),s._v(" "),t("div",{staticClass:"language-dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:18.0-alpine3.14 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" build-stage")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" /package.json .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm config set registry https://registry.npmmirror.com/")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm run build")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:18.0-alpine3.14 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" production-stage")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("build-stage")])]),s._v(" /app/dist /app")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("build-stage")])]),s._v(" /app/package.json /app/package.json")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm config set registry https://registry.npmmirror.com/")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install --production")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 3000")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" [ "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/app/main.js"')]),s._v(" ]")]),s._v("\n")])])]),t("div",{staticClass:"language-dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# build stage")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" node:18-alpine3.14 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" build-stage")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" package.json ./")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm config set registry https://registry.npmmirror.com/")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm run build")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# production stage")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" nginx:stable "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" production-stage")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("build-stage")])]),s._v(" /app/build /usr/share/nginx/html")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("build-stage")])]),s._v(" /app/nginx.conf /etc/nginx/conf.d/default.conf")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPOSE")]),s._v(" 80")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-g"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"daemon off;"')]),s._v("]")]),s._v("\n")])])]),t("p",[s._v(".dockerignore")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("node_modules/\n.vscode/\n.git/\nbuild/\n")])])]),t("h3",{attrs:{id:"_22-docker登录和认证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22-docker登录和认证"}},[s._v("#")]),s._v(" 22.Docker登录和认证")]),s._v(" "),t("p",[s._v("要登录到Docker仓库或私有镜像仓库，可以使用以下命令：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("docker login")]),s._v("：登录到Docker仓库。")]),s._v(" "),t("li",[t("code",[s._v("docker logout")]),s._v("：退出登录。")])]),s._v(" "),t("p",[s._v("登录后，您可以使用"),t("code",[s._v("docker pull")]),s._v("和"),t("code",[s._v("docker push")]),s._v("命令来拉取和推送镜像。")]),s._v(" "),t("h3",{attrs:{id:"_23-docker容器日志管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23-docker容器日志管理"}},[s._v("#")]),s._v(" 23. Docker容器日志管理")]),s._v(" "),t("p",[s._v("除了使用"),t("code",[s._v("docker logs")]),s._v("命令查看容器日志外，还可以使用以下命令对容器日志进行管理：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("docker logs --tail：只显示最后几行的日志。")])]),s._v(" "),t("li",[t("p",[s._v("docker logs --follow：实时跟踪容器的日志输出。")])]),s._v(" "),t("li",[t("p",[s._v("docker logs --since：只显示特定时间之后的日志。")])]),s._v(" "),t("li",[t("p",[s._v("docker logs --until：只显示特定时间之前的日志。")])])]),s._v(" "),t("h2",{attrs:{id:"二、dockerdesktop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、dockerdesktop"}},[s._v("#")]),s._v(" 二、DockerDesktop")]),s._v(" "),t("p",[s._v("https://docs.docker.com/desktop/install/windows-install/")]),s._v(" "),t("ol",[t("li",[s._v("在windows上安装DockerDesktop，需要开启虚拟化支持，而在Windows上有两种虚拟化支撑技术WSL2 和 Hyper-V")]),s._v(" "),t("li",[s._v("docker官方文档有说明，这两种方案用哪个都行，唯一的区别是当你基于WSL2安装DockerDesktop时，镜像和容器无法在不同的Windows用户账户之间共享。")])]),s._v(" "),t("h3",{attrs:{id:"_1-wsl2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-wsl2"}},[s._v("#")]),s._v(" 1.WSL2")]),s._v(" "),t("p",[s._v("1.如果没有自动勾选，启用Windows的Linux子系统：我的电脑右键--\x3e属性--\x3e系统组件--\x3e程序和功能--\x3e启动或关闭win功能：启动虚拟机平台和适用于Linux的win子系统")]),s._v(" "),t("p",[s._v("2.如果需要更新的话，安装更新wsl2：https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi")]),s._v(" "),t("h3",{attrs:{id:"_2-hyper-v"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-hyper-v"}},[s._v("#")]),s._v(" 2.Hyper-V")]),s._v(" "),t("p",[s._v("如果没有自动勾选，启用Windows的Linux子系统：我的电脑右键--\x3e属性--\x3e系统组件--\x3e程序和功能--\x3e启动或关闭win功能：Hyper-V和容器")]),s._v(" "),t("h3",{attrs:{id:"三、windows-下限制-docker-desktop-的资源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、windows-下限制-docker-desktop-的资源"}},[s._v("#")]),s._v(" 三、Windows 下限制 Docker Desktop 的资源")]),s._v(" "),t("p",[s._v("Docker Desktop 启动后会占用大量的系统内存，因为它默认会调用 Windows 下的 Linux 子系统即 WSL 。")]),s._v(" "),t("p",[s._v("占用内存的实际上是 WSL ，如果不安装 Docker Desktop，WSL 默认会用掉 600M 左右的内存。安装 Docker 服务后，内存默认会用到2G左右。Vmmem 进程会占用大量的系统资源，默认会将 CPU 所有的核数都会分给虚拟环境，内存会分出去 80%。")]),s._v(" "),t("p",[s._v("通过配置文件可以限制虚拟环境占用系统资源的数额，WSL配置文件的位置为，没有的话就新建一个：")]),s._v(" "),t("p",[t("code",[s._v("C:\\Users\\<UserName>\\.wslconfig")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[wsl2]\n\nprocessors=2\n\nmemory=2g\n\nswap=8GB\n\nlocalhostForwarding=true\n\nswapfile=D:\\\\temp\\\\wsl-swap.vhdx\n")])])]),t("p",[s._v("虚拟机跑的是 linux 应用，慢点可以接受。所以我们内存限制在 2g，内存不够可以用 SSD 硬盘来凑，swap 缓存的大小给到了 8G，不担心内存不够程序会崩溃。其中 swapfile 的目录路径需要提前创建，不然 swap 分区不会启用， processors 是 CPU 的 核数，memory 是内存大小，单位可以是 MB，也可是 GB。")])])}),[],!1,null,null,null);t.default=r.exports}}]);