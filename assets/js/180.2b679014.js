(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{456:function(v,_,e){"use strict";e.r(_);var t=e(10),o=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"vite"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[v._v("#")]),v._v(" Vite")]),v._v(" "),_("h2",{attrs:{id:"一、vite是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、vite是什么"}},[v._v("#")]),v._v(" 一、Vite是什么？")]),v._v(" "),_("p",[_("code",[v._v("Vite")]),v._v("是新一代的前端构建工具，其主要利用浏览器的"),_("code",[v._v("ESM")]),v._v("特性导入组织代码，在服务器端按需编译返回，完全跳过打包这个概念，服务器随其随用。生产中利用"),_("code",[v._v("Rollup")]),v._v("作为打包工具。")]),v._v(" "),_("h2",{attrs:{id:"二、vite的特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、vite的特点"}},[v._v("#")]),v._v(" 二、Vite的特点")]),v._v(" "),_("ul",[_("li",[v._v("快速的冷启动: "),_("code",[v._v("No Bundle")]),v._v(" + "),_("code",[v._v("esbuild")]),v._v(" 预构建")]),v._v(" "),_("li",[v._v("即时的模块热更新: 基于"),_("code",[v._v("ESM")]),v._v("的"),_("code",[v._v("HMR")]),v._v("，同时利用浏览器缓存策略提升速度")]),v._v(" "),_("li",[v._v("真正的按需加载: 利用浏览器"),_("code",[v._v("ESM")]),v._v("支持，实现真正的按需加载")])]),v._v(" "),_("h2",{attrs:{id:"三、esm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、esm"}},[v._v("#")]),v._v(" 三、ESM")]),v._v(" "),_("p",[_("code",[v._v("ESM")]),v._v("是"),_("code",[v._v("javascript")]),v._v("提出的官方标准化模块系统，浏览器原生支持，可以直接在浏览器中执行"),_("code",[v._v("import")]),v._v("，动态引入我们需要的模块，而不是所有模块打包在一起。")]),v._v(" "),_("p",[v._v("当我们在使用模块开发时，其实就是在构建一张模块依赖关系图，当模块加载时，就会从入口文件开始，最终生成完整的模块实例图。")]),v._v(" "),_("p",[_("code",[v._v("ESM")]),v._v("的执行可以分为三个步骤：")]),v._v(" "),_("ul",[_("li",[v._v("构建: 确定从哪里下载该模块文件、下载并将所有的文件解析为模块记录")]),v._v(" "),_("li",[v._v("实例化: 将模块记录转换为一个模块实例，为所有的模块分配内存空间，依照导出、导入语句把模块指向对应的内存地址。")]),v._v(" "),_("li",[v._v("运行：运行代码，将内存空间填充")])]),v._v(" "),_("h2",{attrs:{id:"四、esbuild"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四、esbuild"}},[v._v("#")]),v._v(" 四、Esbuild")]),v._v(" "),_("p",[_("a",{attrs:{href:"https://esbuild.github.io/",target:"_blank",rel:"noopener noreferrer"}},[v._v("官方文档"),_("OutboundLink")],1)]),v._v(" "),_("p",[_("code",[v._v("Vite")]),v._v("底层使用"),_("code",[v._v("Esbuild")]),v._v("对"),_("code",[v._v(".ts")]),v._v("、"),_("code",[v._v(".jsx")]),v._v("、"),_("code",[v._v(".js")]),v._v("代码文件的转化。")]),v._v(" "),_("p",[_("code",[v._v("Esbuild")]),v._v("是一个打包和压缩工具，它提供了和"),_("code",[v._v("webpack")]),v._v("、"),_("code",[v._v("Rollup")]),v._v("等工具相似的资源打包能力，打包速度是其他工具的10~100倍。")]),v._v(" "),_("p",[v._v("目前支持的功能：")]),v._v(" "),_("ul",[_("li",[v._v("加载器")]),v._v(" "),_("li",[v._v("压缩")]),v._v(" "),_("li",[v._v("打包")]),v._v(" "),_("li",[_("code",[v._v("Tree shaking")])]),v._v(" "),_("li",[_("code",[v._v("Source map")]),v._v("生成")])]),v._v(" "),_("p",[_("code",[v._v("esbuild")]),v._v("总共提供了四个函数："),_("code",[v._v("transform")]),v._v("、"),_("code",[v._v("build")]),v._v("、"),_("code",[v._v("buildSync")]),v._v("、"),_("code",[v._v("Service")])]),v._v(" "),_("h2",{attrs:{id:"五、rollup"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#五、rollup"}},[v._v("#")]),v._v(" 五、Rollup")]),v._v(" "),_("p",[v._v("在生产环境下，"),_("code",[v._v("Vite")]),v._v("使用"),_("code",[v._v("Rollup")]),v._v("来进行打包")]),v._v(" "),_("p",[v._v("在生产环境，由于嵌套导入会导致发送大量的网络请求，即使使用HTTP2.x（多路复用、首部压缩），在生产环境中发布未打包的ESM仍然性能低下。因此，对比在开发环境"),_("code",[v._v("Vite")]),v._v("使用"),_("code",[v._v("esbuild")]),v._v("来构建依赖，生产环境"),_("code",[v._v("Vite")]),v._v("则使用了更加成熟的Rollup来完成整个打包过程。因为"),_("code",[v._v("esbuild")]),v._v("虽然快，但针对应用级别的代码分割、CSS处理仍然不够稳定，同时也未能兼容一些未提供ESM的SDK。")]),v._v(" "),_("p",[_("code",[v._v("Rollup")]),v._v("是基于"),_("code",[v._v("ESM")]),v._v("的"),_("code",[v._v("JavaScript")]),v._v("打包工具。相比于其他打包工具如"),_("code",[v._v("Webpack")]),v._v("，他总是能打出更小、更快的包。因为 "),_("code",[v._v("Rollup")]),v._v(" 基于 "),_("code",[v._v("ESM")]),v._v(" 模块，比 "),_("code",[v._v("Webpack")]),v._v(" 和 "),_("code",[v._v("Browserify")]),v._v(" 使用的 "),_("code",[v._v("CommonJS")]),v._v("模块机制更高效。"),_("code",[v._v("Rollup")]),v._v("的亮点在于同一个地方，一次性加载。能针对源码进行 "),_("code",[v._v("Tree Shaking")]),v._v("(去除那些已被定义但没被使用的代码)，以及 "),_("code",[v._v("Scope Hoisting")]),v._v(" 以减小输出文件大小提升运行性能。")]),v._v(" "),_("p",[_("code",[v._v("Rollup")]),v._v("分为"),_("code",[v._v("build")]),v._v("（构建）阶段和"),_("code",[v._v("output generate")]),v._v("（输出生成）阶段。主要过程如下：")]),v._v(" "),_("ul",[_("li",[v._v("获取入口文件的内容，包装成"),_("code",[v._v("module")]),v._v("，生成抽象语法树")]),v._v(" "),_("li",[v._v("对入口文件抽象语法树进行依赖解析")]),v._v(" "),_("li",[v._v("生成最终代码")]),v._v(" "),_("li",[v._v("写入目标文件")])]),v._v(" "),_("h2",{attrs:{id:"六、核心原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#六、核心原理"}},[v._v("#")]),v._v(" 六、核心原理")]),v._v(" "),_("p",[_("code",[v._v("Vite")]),v._v("其核心原理是利用浏览器现在已经支持"),_("code",[v._v("ES6")]),v._v("的"),_("code",[v._v("import")]),v._v(",碰见"),_("code",[v._v("import")]),v._v("就会发送一个"),_("code",[v._v("HTTP")]),v._v("请求去加载文件，"),_("code",[v._v("Vite")]),v._v("启动一个 "),_("code",[v._v("koa")]),v._v(" 服务器拦截这些请求，并在后端进行相应的处理将项目中使用的文件通过简单的分解与整合，然后再以"),_("code",[v._v("ESM")]),v._v("格式返回返回给浏览器。"),_("code",[v._v("Vite")]),v._v("整个过程中没有对文件进行打包编译，做到了真正的按需加载，所以其运行速度比原始的"),_("code",[v._v("webpack")]),v._v("开发编译速度快出许多！")]),v._v(" "),_("h2",{attrs:{id:"七、hmr热更新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#七、hmr热更新"}},[v._v("#")]),v._v(" 七、HMR热更新")]),v._v(" "),_("p",[v._v("主要是通过"),_("code",[v._v("WebSocket")]),v._v("创建浏览器和服务器的通信监听文件的改变，当文件被修改时，服务端发送消息通知客户端修改相应的代码，客户端对应不同的文件进行不同的操作的更新。")]),v._v(" "),_("h2",{attrs:{id:"八、优化-浏览器的缓存策略提高响应速度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#八、优化-浏览器的缓存策略提高响应速度"}},[v._v("#")]),v._v(" 八、优化：浏览器的缓存策略提高响应速度")]),v._v(" "),_("p",[_("code",[v._v("Vite")]),v._v(" 利用"),_("code",[v._v("HTTP")]),v._v("加速整个页面的重新加载。设置响应头使得依赖模块("),_("code",[v._v("dependency module")]),v._v(")进行强缓存，而源码文件通过设置 "),_("code",[v._v("304 Not Modified")]),v._v(" 而变成可依据条件而进行更新。")]),v._v(" "),_("p",[v._v("若需要对依赖代码模块做改动可手动操作使缓存失效:")]),v._v(" "),_("div",{staticClass:"language-text extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("vite --force\n")])])]),_("p",[v._v("或者手动删除 "),_("code",[v._v("node_modules/.``vite")]),v._v(" 中的缓存文件。")]),v._v(" "),_("h2",{attrs:{id:"九、tree-shaking"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#九、tree-shaking"}},[v._v("#")]),v._v(" 九、Tree Shaking")]),v._v(" "),_("p",[v._v("分为三个阶段：")]),v._v(" "),_("ol",[_("li",[v._v("make阶段：收集模块导出变量并记录到模块依赖关系图中")]),v._v(" "),_("li",[v._v("seal阶段：遍历模块依赖关系图标记模块导出变量有没有被使用")]),v._v(" "),_("li",[v._v("生成代码阶段：使用DCE工具删除Dead Code")])]),v._v(" "),_("p",[v._v("Dead Code")]),v._v(" "),_("ul",[_("li",[v._v("代码不会被执行，不可到达")]),v._v(" "),_("li",[v._v("代码的执行结果不会被用到")]),v._v(" "),_("li",[v._v("代码只会影响到死变量（只写不读）")])])])}),[],!1,null,null,null);_.default=o.exports}}]);