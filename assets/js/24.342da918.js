(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{302:function(a,t,r){"use strict";r.r(t);var e=r(10),s=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"_1-二叉树理论基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-二叉树理论基础"}},[a._v("#")]),a._v(" 1.二叉树理论基础")]),a._v(" "),t("h3",{attrs:{id:"_1-二叉树的种类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-二叉树的种类"}},[a._v("#")]),a._v(" 1.二叉树的种类")]),a._v(" "),t("p",[a._v("题目中二叉树的两种主要的形式：满二叉树和完全二叉树")]),a._v(" "),t("h4",{attrs:{id:"满二叉树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#满二叉树"}},[a._v("#")]),a._v(" 满二叉树")]),a._v(" "),t("p",[a._v("满二叉树：如果一棵二叉树只有度为0的结点和度为2的结点，并且度为0的结点在同一层上，则这棵二叉树为满二叉树。")]),a._v(" "),t("p",[a._v("深度为k，有2^k - 1个节点")]),a._v(" "),t("p",[t("img",{attrs:{src:"/blog/arithmetic/binaryTree_full.png",alt:"binaryTree_full"}})]),a._v(" "),t("h3",{attrs:{id:"完全二叉树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完全二叉树"}},[a._v("#")]),a._v(" 完全二叉树")]),a._v(" "),t("p",[a._v("完全二叉树：在完全二叉树中，除了最底层节点可能没填满外，其余每层节点数都达到最大值，并且最下面一层的节点都集中在该层最左边的若干位置。若最底层为第 h 层（h从1开始），则该层包含 1~ 2^(h-1) 个节点。")]),a._v(" "),t("p",[t("img",{attrs:{src:"/blog/arithmetic/binaryTree_complete.png",alt:"binaryTree_complete"}})]),a._v(" "),t("h3",{attrs:{id:"二叉搜索树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二叉搜索树"}},[a._v("#")]),a._v(" 二叉搜索树")]),a._v(" "),t("p",[t("strong",[a._v("二叉搜索树是一个有序树")]),a._v("。")]),a._v(" "),t("ul",[t("li",[a._v("若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；")]),a._v(" "),t("li",[a._v("若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值；")]),a._v(" "),t("li",[a._v("它的左、右子树也分别为二叉排序树")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/blog/arithmetic/binaryTree_search.png",alt:"binaryTree_search"}})]),a._v(" "),t("h3",{attrs:{id:"平衡二叉搜索树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#平衡二叉搜索树"}},[a._v("#")]),a._v(" 平衡二叉搜索树")]),a._v(" "),t("p",[a._v("平衡二叉搜索树：又被称为AVL（Adelson-Velsky and Landis）树，且具有以下性质：它是一棵空树或它的左右两个子树的高度差的绝对值不超过1，并且左右两个子树都是一棵平衡二叉树。")]),a._v(" "),t("p",[t("img",{attrs:{src:"/blog/arithmetic/binaryTree_searchBalance.png",alt:"binaryTree_searchBalance"}})])])}),[],!1,null,null,null);t.default=s.exports}}]);