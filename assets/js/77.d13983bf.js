(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{355:function(s,t,e){"use strict";e.r(t);var n=e(10),a=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_32-不相交的线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_32-不相交的线"}},[s._v("#")]),s._v(" 32.不相交的线")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://leetcode.cn/problems/uncrossed-lines/",target:"_blank",rel:"noopener noreferrer"}},[s._v("力扣题目链接"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"题目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[s._v("#")]),s._v(" 题目")]),s._v(" "),t("p",[s._v("在两条独立的水平线上按给定的顺序写下 "),t("code",[s._v("nums1")]),s._v(" 和 "),t("code",[s._v("nums2")]),s._v(" 中的整数。")]),s._v(" "),t("p",[s._v("现在，可以绘制一些连接两个数字 "),t("code",[s._v("nums1[i]")]),s._v(" 和 "),t("code",[s._v("nums2[j]")]),s._v(" 的直线，这些直线需要同时满足满足：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("nums1[i] == nums2[j]")])]),s._v(" "),t("li",[s._v("且绘制的直线不与任何其他连线（非水平线）相交。")])]),s._v(" "),t("p",[s._v("请注意，连线即使在端点也不能相交：每个数字只能属于一条连线。")]),s._v(" "),t("p",[s._v("以这种方法绘制线条，并返回可以绘制的最大连线数。")]),s._v(" "),t("p",[t("strong",[s._v("示例 1：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://assets.leetcode.com/uploads/2019/04/26/142.png",alt:"img"}})]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("输入：nums1 = [1,4,2], nums2 = [1,2,4]\n输出：2\n解释：可以画出两条不交叉的线，如上图所示。 \n但无法画出第三条不相交的直线，因为从 nums1[1]=4 到 nums2[2]=4 的直线将与从 nums1[2]=2 到 nums2[1]=2 的直线相交。\n")])])]),t("p",[t("strong",[s._v("示例 2：")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("输入：nums1 = [2,5,1,2,5], nums2 = [10,5,2,1,5,2]\n输出：3\n")])])]),t("p",[t("strong",[s._v("示例 3：")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("输入：nums1 = [1,3,7,1,7,5], nums2 = [1,9,2,5,1]\n输出：2\n")])])]),t("p",[t("strong",[s._v("提示：")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("1 <= nums1.length, nums2.length <= 500")])]),s._v(" "),t("li",[t("code",[s._v("1 <= nums1[i], nums2[j] <= 2000")])])]),s._v(" "),t("h2",{attrs:{id:"思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[s._v("#")]),s._v(" 思路")]),s._v(" "),t("p",[s._v("直线不能相交，这就是说明在字符串A中 找到一个与字符串B相同的子序列，且这个子序列不能改变相对顺序，只要相对顺序不改变，链接相同数字的直线就不会相交。")]),s._v(" "),t("p",[t("strong",[s._v("其实就是求两个字符串的最长公共子序列的长度！")])]),s._v(" "),t("p",[t("RouterLink",{attrs:{to:"/arithmetic/DP/31.LongestCommonSubsequence.html"}},[s._v("最长公共子序列")])],1)])}),[],!1,null,null,null);t.default=a.exports}}]);